// colors

$color-headers: #7A4419;
$color-highlight: #E8E9F3;
// $color-detail: #755C1B;
// $color-detail: #C89C2D;
$color-detail: #B78F2A;
$color-background: #090C08;
$color-text: #CECECE;
$color-neutral: #29363D;

// css and variable overwrites
* {
  box-sizing: border-box;
}

:root {
  $color-percents: (-32%, -24%, -16%, -8%, 0%, 8%, 16%, 24%, 32%);
  $color-names: (void, darkest, darker, dark, norm, light, lighter, lightest, sunbeam);
  @for $i from 1 through 9 {
    $pct: nth($color-percents, $i);
    $name: nth($color-names, $i);

    $shift-headers: scale-color($color-headers, $lightness: $pct);
    $shift-highlight: scale-color($color-highlight, $lightness: $pct);
    $shift-detail: scale-color($color-detail, $lightness: $pct);
    $shift-background: scale-color($color-background, $lightness: $pct);
    $shift-text: scale-color($color-text, $lightness: $pct);
    $shift-neutral: scale-color($color-neutral, $lightness: $pct);

    --color-headers-#{$name}: #{$shift-headers};
    --color-highlight-#{$name}: #{$shift-highlight};
    --color-detail-#{$name}: #{$shift-detail};
    --color-background-#{$name}: #{$shift-background};
    --color-text-#{$name}: #{$shift-text};
    --color-neutral-#{$name}: #{$shift-neutral};
  }

  --example-color-background: var(--color-backgrouund-norm);
  --example-color-border: var(--color-detail-norm);
  --example-color-icon: var(--color-detail-norm);

  --glossary-color-entry-highlight: var(--color-detail-norm);
  --glossary-color-entry-type: var(--color-neutral-norm);
  --glossary-color-list-background: var(--color-background-light);
  --glossary-color-list-border: var(--color-background-lighter);
  --glossary-color-search-background: var(--color-background-dark);
  --glossary-color-search-border: var(--color-highlight-norm);

  --header-color-background: var(--color-neutral-darker);
  --header-color-border: var(--color-detail-norm);
  --header-color-title-1: var(--color-detail-dark);

  --link-color: var(--color-detail-lighter);
  --link-color-active: var(--color-text-norm);

  --move-color-border: var(--color-text-dark);
  --move-color-shaded: var(--color-background-light);

  --nav-color-background: var(--color-background-norm);
  --nav-color-background-hover: var(--color-neutral-norm);
  --nav-color-border: var(--color-highlight-norm);
  --nav-color-flag: var(--color-highlight-norm);
  --nav-color-text: var(--color-text-norm);

  --option-color-bullet: var(--color-detail-lighter);

  --sidebarMenu-color-list-border: var(--color-detail-darker);
  --sidebarMenu-color-list-background: var(--color-neutral-void);
  --sidebarMenu-color-text: var(--color-headers-lighter);

  --stat-color: var(--color-highlight-norm);

  --tracker-color-button-border: var(--color-neutral-norm);
  --tracker-color-button-border-selected: var(--color-detail-lighter);
  --tracker-color-button-hover: var(--color-neutral-darker);
  --tracker-color-button-text: var(--color-text-norm);
  --tracker-color-die-border: var(--color-headers-lighter);
  --tracker-color-die-focus: var(--color-detail-lighter);
  --tracker-color-die-selected: var(--color-neutral-darker);
  --tracker-color-outcome-title: var(--color-headers-norm);
  --tracker-color-text-warn: var(--color-detail-norm);
}

// ------------------ elements
body, html {
  background: var(--color-background-norm);
  color: var(--color-text-norm);
  margin: 0;
  line-height: 1.35em;
  height: 100%;

  @media screen and (max-width: 900px) {
    line-height: 1.35em;
  }
}

#app {
  height: 100%;
}

a {
  text-decoration: none;
  color: var(--link-color);
  &:hover {
    text-decoration: underline;
  }
  &:visited {
    color: var(--link-color);
  }
  &.router-link-exact-active {
    color: var(--link-color-active);
    cursor: default;
  }
  &.forceColor {
    color: var(--link-color);
  }
  &.forceClickable {
    cursor: pointer;
  }
}

button {
  background: none;
	color: inherit;
	border: none;
	font: inherit;
	cursor: pointer;
	outline: inherit;
  padding: 16px 8px;

  &:focus {
    background: var(--color-headers-dark, purple);
    outline: var(--color-neutral-norm, purple) solid 1px;
  }
}

// a fallback when you want _arbitrary emphasis_ on some text.
// attention grabbing, but not of additional importance.
// ex: The <b>house</b> stood empty.
b {
  color: var(--color-highlight-norm);
  font-style: normal;
  font-weight: 700;
  // text-transform: uppercase;
}

// when you need text that's both attention grabbing and _important_.
// ex: <strong>Required:</strong> you have to love <strong>pbta</strong>.
strong {
  color: var(--color-highlight-norm);
  font-style: normal;
  font-weight: 700;
}

// use it when the text needs *real emphasis* to convey it's meaning.
// ex: I <em>love</em> pbta.
em {
  color: var(--color-highlight-norm);
  font-weight: 500;
  font-style: normal;
  font-size: 1.1em;
}

hr {
  border-color: var(--color-detail-norm);
  color: var(--color-detail-norm);
  height: 1px;
  width: 50%;
}

// page headers only
h1 {
  color: var(--color-headers-norm);
  font-size: 3.5em;
  line-height: 1.25em;
  margin-block-start: 0.5em;
  margin-block-end: 0.25em;
  width: max-content;

  @media screen and (max-width: 900px) {
    overflow-wrap: break-word;
    margin-block-start: 0.25em;
  }
}

// embedded headers
h2 {
  color: var(--color-headers-norm);
  margin-block-start: 1em;
  margin-block-end: 0.25em;
  margin-top: 48px;
  font-size: 2em;
  line-height: 1em;

  @media screen and (min-width: 900px) {
    width: max-content;
  }
}

// subsection and move/ability headers
h3 {
  color: var(--color-headers-norm);
  width: 100%;
  margin-top: 48px;
  margin-block-end: 0.25em;
  font-size: 1.35em;

  @media screen and (min-width: 900px) {
    width: max-content;
  }
}

// list headers and other reference points
h4 {
  color: var(--color-headers-norm);
  margin: 0;
  font-size: 1.15em;
  margin-block-start: 1.75em;
}

menu {
  margin: 0;
  list-style-type: none;
  padding-inline-start: 0;
}

ul {
  margin: 0;
  list-style-type: none;
  padding-inline-start: 0;
}

li {
  list-style-type: none;
}

input {
  -webkit-appearance: none;
  border-top-style: hidden;
  border-right-style: hidden;
  border-left-style: hidden;
  border-bottom-style: hidden;

  min-height: 2.5em;
  background-color: var(--color-background-norm);
  color: var(--color-text-norm);
  font-size: 1em;

  &:focus {
    outline: none;
  }
}

// used to showcase play examples and other anecdotes.
aside {
  padding: 0 6% 0 4%;
  font-style: oblique;
  text-align: justify;
  margin-top: 16px;
  border-radius: 12px;
  border-top: 1px solid var(--color-detail-norm);
  border-bottom: 1px solid var(--color-detail-norm);
  border-color: var(--color-headers-norm);
}

// used to quote.  technically needs to quote an actual thing,
// and can use a src (when available) to link to the quoted
// thing, but can also just quote fictional things.
blockquote {
  border-left: 2px solid var(--color-text-darker);
  padding: 24px 12px 12px 36px;
  margin: 0;
  margin: 24px 0% 8px 0%;
  color: var(--color-text-norm);
  background-color: var(--color-neutral-void);

  @media screen and (max-width: 900px) {
    margin-left: 0;
    margin-right: 0;
  }
}

figcaption {
  padding-top: 4px;
  padding-left: 75%;
  font-style: oblique;

  &::before {
    content: "- "
  }

  @media screen and (max-width: 900px) {
    padding-left: 50%;
  }
}

// ------------------ classes
.overlord {
  height: 100%;
  display: flex;
  flex-direction: column;
}

.pageBody {
  padding-top: 1em;
  flex-grow: 1;
  padding-bottom: 80px;

  @media screen and (max-width: 900px) {
    padding: 1em;
  }

  @media screen and (min-width: 900px) {
    padding-left: 16%;
    padding-right: 16%;

    &--sidebar {
      padding-left: 0;
      padding-right: 0;
    }
  }

  @media screen and (min-width: 1280px) {
    padding-left: 20%;
    padding-right: 20%;

    &--sidebar {
      padding-left: 0;
      padding-right: 0;
    }
  }
}

.lineTo {
  position: relative;

  &:before {
    content: "";
    display: block;
    width: 10vw;
    height: 1px;
    background: linear-gradient(90deg, var(--color-background-norm) 50%, var(--color-detail-norm));
    right: calc(100% + 12px);
    top: 50%;
    position: absolute;
  }
}

.indent {
  text-align: left;
  margin-left: 4%;
  max-width: 96%;

  @media screen and (max-width: 900px) {
    margin-left: 8%;
  }
}

.leftLined {
  padding-left: 2%;
  margin-top: 12px;
  border-left: 1px solid var(--color-text-norm);
  margin-left: 2%;
}

.title {
  position: relative;

  @media screen and (max-width: 900px) {
    width: 100%;
    text-align: left;
  }

  &:after {
    content: "";
    background: var(--color-detail-lighter);
    display: block;
    width: 100%;
    height: 1px;
    position: absolute;
  }

  @media screen and (min-width: 900px) {
    &:after {
      top: 50%;
      width: calc(68vw - 100%);
      right: calc((68vw - 95%) * -1);
    }
  }

  @media screen and (min-width: 1280px) {
    &:after {
      top: 50%;
      width: calc(60vw - 100%);
      right: calc((60vw - 95%) * -1);
    }
  }
}

.breadcrumb {
  display: flex;
  justify-content: flex-start;
  cursor: pointer;
}

.blurb {
  text-align: left;
  margin-left: 2%;

  @media screen and (max-width: 900px) {
    margin-left: 0%;
  }

  &--for {
    @extend .blurb;
    margin-left: 0;

    @media screen and (min-width: 900px) {
      &:before {
        content: "â•˜";
        margin-right: 16px;
        font-size: 1.5em;
        color: var(--color-highlight-norm);
      }
    }
  }
}

.hint {
  color: var(--color-text-norm);
}

.changelog {
  margin-top: 24px;
  text-align: left;
  width: 100%;

  &:after {
    content: "";
    display: block;
    width: 100%;
    height: 1px;
    background: var(--color-text-norm);
    position: relative;
    top: 8px;
  }

  &:before {
    content: "";
    display: block;
    width: 100%;
    height: 1px;
    background: var(--color-text-norm);
    position: relative;
    top: 8px;
  }
}

.clickable {
  cursor: pointer;
}

.quote {
  border-left: 2px solid var(--color-text-darker);
  padding: 2px 12px 2px 24px;
  margin: 12px 0 8px 0;
  color: var(--color-text-norm);
  background-color: var(--color-neutral-void);

  @media screen and (max-width: 900px) {
    padding-right: 12px;
  }
}

.playExample {
  border-radius: 12px;
  border-top: 1px solid var(--color-detail-norm);
  border-bottom: 1px solid var(--color-detail-norm);
  background: var(--color-neutral-void);

  padding: 0 6% 0 4%;
  font-style: oblique;
  text-align: justify;
  margin-top: 16px;
}

.miniBorder {
  border-radius: 12px;
  border-top: 1px solid var(--color-detail-norm);
  border-bottom: 1px solid var(--color-detail-norm);
}

.tbl {
  border-spacing: 0;
}

.tblHead {
  text-align: left;
}

.tblRow {

  & .tblEnt {
    vertical-align: baseline;
    padding-right: 12px;
    padding-bottom: 16px;

    @media screen and (max-width: 900px) {
      padding-right: 8px;
    }

    &:first-child {
      padding-right: 16px;

      @media screen and (max-width: 900px) {
        padding-right: 0px;
      }
    }

    &:not(:first-child) {
      padding-left: 36px;

      @media screen and (max-width: 900px) {
        padding-left: 12px;
      }
    }

    &:last-child {
      border-left: 1px solid var(--color-highlight-norm);
    }
  }
}

.alert {
  padding: 16px;
  margin: 24px 8% 8px 8%;
  border: 1px solid var(--color-detail-lighter, white);
  border-radius: 8px;
  display: flex;
  justify-content: center;
  align-items: center;
  color: var(--color-highlight-norm);

  @media screen and (max-width: 900px) {
    margin: 24px 16px 8px 16px;
  }
}

.break {
  &::after {
    content: "-";
    position: absolute;
  }

  @media screen and (min-width: 900px) {
    display: none;
  }
}

.center {
  text-align: center;
}